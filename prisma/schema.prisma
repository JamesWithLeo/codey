generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}
enum Role {
  user
  admin
}
enum Category {
  handtools
  powertools
  materials
  electrical
  plumbing
  fasteners
  safetygears
  machineries
  others
}
model users {
  id        Int      @id @unique()@default(autoincrement())
  role      Role     @default(user)
  email     String   @unique
  username  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt   
  
  order     order[]  @relation("UserToOrders")
}

model product {
  id          Int      @id @unique()@default(autoincrement())
  name        String  
  category    Category 
  price       Decimal  @db.Decimal(10, 2)
  description String
  thumbnail   String
  otherUrl    String[] @default([])
  stock       Int      
  brand       String
  isFeatured  Boolean  @default(false)
  isAvailable Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  sales       Int      @default(0)

  order      order[]  @relation("ProductOrders")
}

enum Status {
  pending
  shipped
  delivered
  canceled
}
model order {
  id           Int      @id @unique @default(autoincrement())
  quantity     Int
  total_price  Decimal  @db.Decimal(10, 2)
  isPaid       Boolean  @default(true)
  status       Status
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  product_id   Int
  user_id      Int
  users        users    @relation("UserToOrders",fields: [user_id], references: [id])
  product      product  @relation("ProductOrders", fields: [product_id], references: [id])
}